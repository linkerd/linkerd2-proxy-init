name: Validator release

on:
  pull_request:
    paths:
      - .github/workflows/release-validator.yml
  push:
    tags: ["validator/v*"]

permissions:
  contents: read

jobs:
  meta:
    timeout-minutes: 15
    runs-on: ubuntu-24.04
    container: ghcr.io/linkerd/dev:v47-rust
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: ./.github/actions/version-mode
        id: meta
        with:
          package: validator
          check: true
    outputs:
      repo: ${{ steps.meta.outputs.repo }}
      mode: ${{ steps.meta.outputs.mode }}
      version: ${{ steps.meta.outputs.version }}

  package:
    needs: meta
    strategy:
      matrix:
        arch: [amd64, arm64]
        os: [windows, linux]
        exclude:
          - os: windows
            arch: arm64
    timeout-minutes: 10
    runs-on: ubuntu-24.04
    container: ghcr.io/linkerd/dev:v47-rust-musl
    steps:
      - name: Install MinGW
        if: matrix.os == 'windows'
        run: apt-get update && apt-get install mingw-w64 -y
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - run: just validator arch=${{ matrix.arch }} os=${{ matrix.os }} profile=release version=${{ needs.meta.outputs.version }} package
        env:
          CARGO: "cargo auditable"
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-${{ matrix.os }}-artifacts
          path: target/package/

  publish:
    needs: [meta, package]
    timeout-minutes: 5
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          path: ${{ runner.temp }}/artifacts
      - run: find "$RUNNER_TEMP"/artifacts -type f -ls
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - if: needs.meta.outputs.mode == 'release'
        uses: softprops/action-gh-release@aec2ec56f94eb8180ceec724245f64ef008b89f5
        with:
          name: validator ${{ needs.meta.outputs.version }}
          files: ${{ runner.temp }}/artifacts/**/*
