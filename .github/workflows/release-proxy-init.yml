name: Proxy-init release

on:
  pull_request:
    paths:
      - .github/workflows/release-proxy-init.yml
  push:
    tags: ["init/v*"]

permissions:
  contents: read

jobs:
  meta:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    container: ghcr.io/linkerd/dev:v30-tools
    steps:
      - id: meta
        shell: bash
        run: |
          set -eu
          shopt -s extglob
          ref='${{ github.ref }}'
          if [[ "$ref" == refs/tags/proxy-init/v+([0-9]).+([0-9]).+([0-9])?(-+([a-z0-9-])) ]]; then
            ( echo version="${ref##refs/tags/proxy-init/}"
              echo mode=release
            ) >> "$GITHUB_OUTPUT"
          else
            sha='${{ github.sha }}'
            ( echo version="test-${sha:0:7}"
              echo mode=test
            ) >> "$GITHUB_OUTPUT"
          fi
    outputs:
      repo: ghcr.io/${{ github.repository_owner }}/proxy-init
      mode: ${{ steps.meta.outputs.mode }}
      version: ${{ steps.meta.outputs.version }}

  docker-publish:
    needs: meta
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write # needed for signing the images with GitHub OIDC token
    steps:
      - uses: extractions/setup-just@95b912dc5d3ed106a72907f2f9b91e76d60bdb76
      - uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8
      - uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6

      # Build multi-arch docker images for proxy-init:
      - uses: actions/cache@56461b9eb0f8438fd15c7a9968e3c9ebb18ceff1
        with:
          path: ${{ runner.temp }}/.buildx-cache
          key: proxy-init-${{ needs.meta.outputs.mode }}-${{ needs.meta.outputs.version }}
          restore-keys: proxy-init-${{ needs.meta.outputs.mode }}-
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - run: |
            docker buildx build . \
              --tag="${{ needs.meta.outputs.repo }}:${{ needs.meta.outputs.version }}" \
              --cache-from type=local,src="$RUNNER_TEMP/.buildx-cache" \
              --cache-to type=local,dest="$RUNNER_TEMP/.buildx-cache",mode=max \
              --platform="linux/amd64,linux/arm64,linux/arm/v7"
      - run: just action-prune-docker

      # Only publish images on release
      - if: needs.meta.outputs.mode == 'release'
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_GHCR_USERNAME }}
          password: ${{ secrets.DOCKER_GHCR_PAT }}
      - if: needs.meta.outputs.mode == 'release'
        run: |
            docker buildx build . --push \
              --tag="${{ needs.meta.outputs.repo }}:${{ needs.meta.outputs.version }}" \
              --cache-from type=local,src="$RUNNER_TEMP/.buildx-cache" \
              --cache-to type=local,dest="$RUNNER_TEMP/.buildx-cache",mode=max \
              --platform="linux/amd64,linux/arm64,linux/arm/v7"
      - if: needs.meta.outputs.mode == 'release'
        uses: sigstore/cosign-installer@ced07f21fb1da67979f539bbc6304c16c0677e76
      - if: needs.meta.outputs.mode == 'release'
        run: cosign sign "${{ needs.meta.outputs.repo }}:${{ needs.meta.outputs.version }}"
        env:
          COSIGN_EXPERIMENTAL: 1

  github:
    needs: [meta, docker-publish]
    timeout-minutes: 5
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - if: needs.meta.outputs.mode == 'release'
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        with:
          name: proxy-init ${{ needs.meta.outputs.version }}
