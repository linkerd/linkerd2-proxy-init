name: Release
on:
  push:
    tags:
    - "*"

permissions:
  contents: read

env:
  GH_ANNOTATION: true

jobs:

  proxy_init_build:
    name: Build & Push Proxy Init Multi Arch Images
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    permissions:
      id-token: write # needed for signing the images with GitHub OIDC token
    steps:
    - name: Checkout code
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
    - uses: extractions/setup-just@aa5d15c144db4585980a44ebfdd2cf337c4f14cb
    - name: Set env variables
      shell: bash
      run: |
        tag="$(git describe --exact-match --tags 2> /dev/null || git rev-parse --short HEAD)"
        echo "TAG=$tag" >> "$GITHUB_ENV"
        echo "DOCKER_BUILDKIT_CACHE=${{ runner.temp }}/.buildx-cache" >> "$GITHUB_ENV"
    - uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8
    - uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6
    - uses: actions/cache@fd5de65bc895cf536527842281bea11763fefd77
      with:
        path: ${{ env.DOCKER_BUILDKIT_CACHE }}
        key: proxy-init-${{ env.TAG }}
        restore-keys: proxy-init-
    - uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
      with:
        registry: ghcr.io
        username: ${{ secrets.DOCKER_GHCR_USERNAME }}
        password: ${{ secrets.DOCKER_GHCR_PAT }}
    - name: Build docker images
      shell: bash
      run: |
          docker buildx build . \
          --file=Dockerfile \
          --tag="ghcr.io/${{ github.repository_owner }}/proxy-init:${TAG}" \
          --cache-from type=local,src="${DOCKER_BUILDKIT_CACHE}" \
          --cache-to type=local,dest="${DOCKER_BUILDKIT_CACHE}",mode=max \
          --platform="linux/amd64,linux/arm64,linux/arm/v7" \
          --push
    - name: Install Cosign
      uses: sigstore/cosign-installer@v2
    - name: Sign the image with Cosign
      env:
        COSIGN_EXPERIMENTAL: 1
      run: cosign sign "ghcr.io/linkerd/proxy-init:$TAG"
    - name: Prune docker layers cache
      run: just docker-cache-prune '${{ env.DOCKER_BUILDKIT_CACHE }}'
