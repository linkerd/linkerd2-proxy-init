---
apiVersion: v1
kind: Pod
metadata:
  name: pod-with-no-rules
  namespace: proxy-init-test
  labels:
    app: pod-with-no-rules
spec:
  containers:
  - name: webserver
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "8080"
    command: ["go", "run", "./test_service/test_service.go"]
    ports:
    - name: http
      containerPort: 8080
  - name: other-container
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "9090"
    command: ["go", "run", "./test_service/test_service.go"]
    ports:
    - name: http
      containerPort: 9090
---
apiVersion: v1
kind: Service
metadata:
  name: svc-pod-with-no-rules
  namespace: proxy-init-test
spec:
  selector:
    app: pod-with-no-rules
  ports:
  - name: http
    port: 8080
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-with-existing-rules
  namespace: proxy-init-test
  labels:
    app: pod-with-existing-rules
spec:
  containers:
  - name: webserver
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "8080"
    command: ["go", "run", "./test_service/test_service.go"]
    ports:
    - name: http
      containerPort: 8080
  - name: other-container
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "9090"
    command: ["go", "run", "./test_service/test_service.go"]
    ports:
    - name: http
      containerPort: 9090
  initContainers:
  # The iptables-test init container is used to test what happens when
  # iptable rules are run more than once. The linkerd-init container
  # should log "Found existing firewall configuration..."
  - name: iptables-test
    image: test.l5d.io/linkerd/proxy-init:latest
    imagePullPolicy: IfNotPresent
    args: ["-p", "8080",  "-o", "8080", "-u", "2102"]
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_ADMIN
        - NET_RAW
      privileged: false
      readOnlyRootFilesystem: true
      runAsNonRoot: false
      runAsUser: 0
    volumeMounts:
    - mountPath: /run
      name: linkerd-proxy-init-xtables-lock
  - name: linkerd-init
    image: test.l5d.io/linkerd/proxy-init:latest
    imagePullPolicy: IfNotPresent
    args: ["-p", "8080",  "-o", "8080", "-u", "2102"]
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_ADMIN
        - NET_RAW
      privileged: false
      readOnlyRootFilesystem: true
      runAsNonRoot: false
      runAsUser: 0
    volumeMounts:
    - mountPath: /run
      name: linkerd-proxy-init-xtables-lock
  volumes:
  - emptyDir: {}
    name: linkerd-proxy-init-xtables-lock
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-redirects-all-ports
  namespace: proxy-init-test
  labels:
    app: pod-redirects-all-ports
spec:
  containers:
  - name: other-container
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "9090"
    command: ["go", "run", "./test_service/test_service.go"]
    ports:
    - name: http
      containerPort: 9090
  - name: proxy-stub
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "8080"
    - name: AM_I_THE_PROXY
      value: "yes"
    command: ["go", "run", "./test_service/test_service.go"]
    securityContext:
      privileged: false
      runAsUser: 2102
    ports:
    - name: http
      containerPort: 8080
  initContainers:
  - name: linkerd-init
    image: test.l5d.io/linkerd/proxy-init:latest
    imagePullPolicy: IfNotPresent
    args: ["-p", "8080",  "-o", "8080", "-u", "2102"]
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_ADMIN
        - NET_RAW
      privileged: false
      readOnlyRootFilesystem: true
      runAsNonRoot: false
      runAsUser: 0
    volumeMounts:
    - mountPath: /run
      name: linkerd-proxy-init-xtables-lock
  volumes:
  - emptyDir: {}
    name: linkerd-proxy-init-xtables-lock
---
apiVersion: v1
kind: Service
metadata:
  name: svc-pod-redirects-all-ports
  namespace: proxy-init-test
spec:
  selector:
    app: pod-redirects-all-ports
  ports:
  - name: http
    port: 8080
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-redirects-whitelisted
  namespace: proxy-init-test
  labels:
    app: pod-redirects-whitelisted
spec:
  containers:
  - name: proxy-stub
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "8080"
    - name: AM_I_THE_PROXY
      value: "yes"
    command: ["go", "run", "./test_service/test_service.go"]
    ports:
    - name: http
      containerPort: 8080
    securityContext:
      privileged: false
      runAsUser: 2102
  initContainers:
  - name: linkerd-init
    image: test.l5d.io/linkerd/proxy-init:latest
    imagePullPolicy: IfNotPresent
    args: ["-p", "8080",  "-o", "8080", "-u", "2102", "-r", "9090", "-r", "9099"]
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_ADMIN
        - NET_RAW
      privileged: false
      readOnlyRootFilesystem: true
      runAsNonRoot: false
      runAsUser: 0
    volumeMounts:
    - mountPath: /run
      name: linkerd-proxy-init-xtables-lock
  volumes:
  - emptyDir: {}
    name: linkerd-proxy-init-xtables-lock
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-doesnt-redirect-blacklisted
  namespace: proxy-init-test
  labels:
    app: pod-doesnt-redirect-blacklisted
spec:
  containers:
  - name: proxy-stub
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "8080"
    - name: AM_I_THE_PROXY
      value: "yes"
    command: ["go", "run", "./test_service/test_service.go"]
    ports:
    - name: http
      containerPort: 8080
    securityContext:
      privileged: false
      runAsUser: 2102
  - name: other-container
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "9090"
    command: ["go", "run", "./test_service/test_service.go"]
    ports:
    - name: http
      containerPort: 9090
  - name: blacklisted-container
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "7070"
    command: ["go", "run", "./test_service/test_service.go"]
    ports:
    - name: http
      containerPort: 7070
  initContainers:
  - name: linkerd-init
    image: test.l5d.io/linkerd/proxy-init:latest
    imagePullPolicy: IfNotPresent
    args: ["-p", "8080",  "-o", "8080", "-u", "2102", "--inbound-ports-to-ignore", "6000-8000"]
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_ADMIN
        - NET_RAW
      privileged: false
      readOnlyRootFilesystem: true
      runAsNonRoot: false
      runAsUser: 0
    volumeMounts:
    - mountPath: /run
      name: linkerd-proxy-init-xtables-lock
  volumes:
  - emptyDir: {}
    name: linkerd-proxy-init-xtables-lock
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-ignores-subnets
  namespace: proxy-init-test
  labels:
    app: pod-ignores-subnets
spec:
  containers:
  - name: proxy-stub
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "8080"
    - name: AM_I_THE_PROXY
      value: "yes"
    command: ["go", "run", "./test_service/test_service.go"]
    ports:
    - name: http
      containerPort: 8080
    securityContext:
      privileged: false
      runAsUser: 2102
  - name: other-container
    image: test.l5d.io/linkerd/iptables-tester:v1
    env:
    - name: PORT
      value: "9090"
    command: ["go", "run", "./test_service/test_service.go"]
    ports:
    - name: http
      containerPort: 9090
  initContainers:
  - name: linkerd-init
    image: test.l5d.io/linkerd/proxy-init:latest
    imagePullPolicy: IfNotPresent
    args: ["-p", "8080",  "-o", "8080", "-u", "2102", "--subnets-to-ignore", "0.0.0.0/0"]
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_ADMIN
        - NET_RAW
      privileged: false
      readOnlyRootFilesystem: true
      runAsNonRoot: false
      runAsUser: 0
    volumeMounts:
    - mountPath: /run
      name: linkerd-proxy-init-xtables-lock
  volumes:
  - emptyDir: {}
    name: linkerd-proxy-init-xtables-lock
